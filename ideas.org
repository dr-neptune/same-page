* <2025-01-21 Tue>

Currently when the user registers, it doesn't seem to set a cookie or
session correctly. Until the user logs in, they are not able to make a
goal or set their avatar without it failing. done

make it look good on mobile!

We need to differentiate between a users personal dashboard and a
public dashboard. Both should show the notes / goals and user
information, but the public one shouldn't have edit / delete options

* <2025-01-20 Mon>

Let's start with integer -> minutes

Add avatar to public page
remove edit / delete from public page view

add icons to goals

change goals to something more free-form like the notes. Keep the
expansion? Maybe always show the Create a Goaltop 5 latest? Add an optional icon to
the goals

write a readme for this project? Maybe give it a different name?

It would be neat to make it more like a micro-blogging platform. You
can share small snippets of progress, or you can share larger blog
posts.

Can we make the dashboard top level look a bit cleaner? Maybe a cut
off section with a horizontal rule between the content and the user
information. Something like

user avatar ----- Your Dashboard, Username
-------------------
Notes

Goals

Would be cool to allow each user to select a theme, and when they do
their public page has that theme

It would be cool to have gpt try to refactor things to be a bit
cleaner, and to see where macros could be used.

Maybe we should start working on a db migration tool? Then we can
share the changes.

* <2025-01-17 Fri>
It didn't go so well yesterday, and I didn't actually get the app
running. Trying from scratch today:

- edit notes and goals
- add a quick button that adds practice without viewing all logs
- line up Log a Practice and Back to Overview buttons in the
  practice-logs page

Let's start working on the social media aspects

- make the users core page be at /username
- make the root page be people's updates

Give a user a username and a display name. Allow them to adjust their
profile which changes their displayname. It would also be cool to add
pictures for users.

Could this also be a micro-blogging platform?
Maybe let's focus on goals for now, then add blog posts which are
shareable. A cool part of blog posts could be the ability for users to
add notes on specific parts of the tex

At some point it would be good to see what might be collapsed into a
macro

Let's add a user management page!

Please make it appear by clicking on the username in the top bar
within: Logged in as: username. In the user management page, please
allow the user to set their display name and allow them to upload an
image for a profile picture. Please display an empty box if no profile
picture has been added, or display their picture if they have uploaded
a profile pic. If the user updates their display name, make it show in
their dashboard as Your Dashboard, DISPLAY_NAME

Let's add a user management page!

Please make it appear by clicking on the username in the top bar
within: Logged in as: username. In the user management page, please
allow the user to set their display name and allow them to set a url
of an image for a profile picture (think adding an imgur image). Please display an empty box if no profile
picture has been added, or display their picture if they have uploaded
a profile pic. If the user updates their display name, make it show in
their dashboard as Your Dashboard, DISPLAY_NAME

We need to handle practice time in the form of minutes instead of integers

* <2025-01-15 Wed>

adding delete functionality

While the app is small, we should add:

- tests
- collaboration features

we also still need to autofill the date and time for practice. We
should also support non-integer goal progress. It should be at the
minutes level, not the hour level.

* <2025-01-10 Fri>

idea: use this as a platform for some micro-startup experiments.

First, lets get this goals site working and try to release it

added some of the practice time features to goals. Things still need
to be cleaned up with look and feel

Maybe next time we continue on with the domain model, and also add
deletion of notes and goals / progress

in the admin tables, can we provide a select box for different users
data? Include one for all users as well

* <2025-01-09 Thu>

I think we can start adding more of the domain features

started adding goals

I also split up the pages file. We should probably also split up the
routes file

* <2025-01-08 Wed>

fix current app state [done]
make it look more visually appealing
continue working on the simplest domain model

maybe add a much more in depth user auth
maybe add a db view page so I can see current state of each table

Very cool, it works! Can you make it so that if I click an expanded
goal again it folds back? Can you also add a db column that says how
many hours of the goal are completed? Please also allow the user to
set an initial progress when making a goal, defaulting to 0
hours. Please show the amount completed in the main goal table
(unexpanded) as num hours / total hours for goal. For example, if the
user specified 10,000 hours and has 50 hours, they would see at a top
level 50/10,000

* <2025-01-07 Tue>
** High-Level Domain & Data Model

*** 1. Domain Concepts
   1. User
      - Represents a person who logs into the app.
      - Owns goals (and can share them in the future).
      - Can collaborate on others’ goals as well.

   2. Goal
      - High-level objective (e.g., “Master Guitar,” “Learn French,” etc.).
      - Progress measured by logging sessions (time + notes).
      - Could have a specific target (e.g., 10,000 hours to mastery).

   3. Practice Session (Time Log)
      - Each session records:
        - Duration (time spent).
        - Notes or reflections (deliberate practice focus, etc.).
        - Date/time of the session.
      - Potentially attach images or other media in future.

   4. Sharing / Collaboration (Future)
      - Multiple users can share or collaborate on a goal.
      - Roles: “viewer,” “editor,” or similar.
      - A user can grant access to others for specific goals.

   5. Reminders / Nudges (Future)
      - Remind user of deliberate practice tips or progress updates.
      - Could be simple text, push notifications, or scheduled emails.
c
*** 2. Relationships
   - User → Goal
     - A User has many Goals.
     - Each Goal belongs to one User (its owner).
   - Goal → Practice Session
     - A Goal has many Practice Sessions.
     - Each Practice Session belongs to exactly one Goal.
   - (Future) User ↔ Goal (Sharing / Collaboration)
     - A User can have access to many Goals (via share table).
     - A Goal can be accessed by multiple Users.

*** 3. Proposed Data Model

**** 3.1. Users Table
| Column     | Type         | Description                               |
|------------+--------------+-------------------------------------------|
| id         | BIGINT (PK)  | Primary key (auto-increment/identity)     |
| email      | VARCHAR(255) | Unique email address                      |
| name       | VARCHAR(255) | Display name or real name                 |
| password   | VARCHAR(255) | Hashed password (or external OAuth, etc.) |
| created_at | TIMESTAMP    | When user was created                     |
| updated_at | TIMESTAMP    | Last update timestamp (optional)          |

**** 3.2. Goals Table
| Column       | Type           | Description                                     |
|--------------+----------------+-------------------------------------------------|
| id           | BIGINT (PK)    | Primary key (auto-increment/identity)           |
| user_id      | BIGINT (FK)    | References users.id (the owner of the goal)     |
| title        | VARCHAR(255)   | Short descriptive title (e.g., “Master Guitar”) |
| description  | TEXT           | Longer description or purpose statement         |
| target_hours | INT or DECIMAL | (Optional) e.g., 10,000 for mastery             |
| created_at   | TIMESTAMP      | When goal was created                           |
| updated_at   | TIMESTAMP      | Last update timestamp                           |

**** 3.3. Practice Sessions (Time Logs)
| Column       | Type           | Description                                                    |
|--------------+----------------+----------------------------------------------------------------|
| id           | BIGINT (PK)    | Primary key (auto-increment/identity)                          |
| goal_id      | BIGINT (FK)    | References goals.id                                            |
| duration     | INT or DECIMAL | Time spent on the goal (choose suitable units: minutes, hours) |
| notes        | TEXT           | User’s practice notes, reflections, etc.                       |
| session_date | TIMESTAMP      | When the session took place (could be TIMESTAMP or DATE)       |
| created_at   | TIMESTAMP      | When this log record was created                               |
| updated_at   | TIMESTAMP      | Last update timestamp                                          |

**** 3.4. Shares Table (Future Collaboration)
| Column     | Type        | Description                                    |
|------------+-------------+------------------------------------------------|
| id         | BIGINT (PK) | Primary key (auto-increment)                   |
| goal_id    | BIGINT (FK) | References goals.id                            |
| user_id    | BIGINT (FK) | References users.id (the user who gets access) |
| role       | VARCHAR(50) | “viewer”, “editor”, etc.                       |
| created_at | TIMESTAMP   | When this share entry was created              |

**** 3.5. Images Table (Future Attachments)
| Column              | Type          | Description                                              |
|---------------------+---------------+----------------------------------------------------------|
| id                  | BIGINT (PK)   | Primary key (auto-increment)                             |
| practice_session_id | BIGINT (FK)   | References practice_sessions.id                          |
| url or blob         | VARCHAR(1024) | Could be a URL (S3, local, etc.) or BLOB if storing data |
| caption             | TEXT          | Optional caption / description of the image              |
| created_at          | TIMESTAMP     | When image record was created                            |

*** 4. Example Workflow
   1. User registers → Creates a record in Users.
   2. User creates one or more Goals → Records in Goals, linked to user_id.
   3. User logs Practice Sessions → Each row in Practice Sessions belongs to a goal.
   4. (Future) User decides to share a goal → Entry in Shares table giving another user “viewer” or “editor” role.
   5. (Future) User adds images to sessions → Rows in Images, referencing practice_session_id.

*** 5. Next Steps
   - Implement user authentication/authorization.
   - Build CRUD for Goals (create, read, update, delete).
   - Build CRUD for Practice Sessions.
   - (Future) Implement collaboration/sharing logic.
   - (Future) Add file/image handling if storing attachments.
   - (Future) Introduce reminders or notifications for deliberate practice.

** Other Notes
- testing new emacs config on permutation.
- next step should be to persist the persistence layer. I'm wondering
  if it might be beneficial to switch from H2 to sqlite
  - talked it through with yip. Will stick with H2 since it seems to
    be a standard with java projects and offers similar syntax to
    postgres.
  - update: persistence persisted.

I think some of the lack of movement on this is because I don't really
know what I'm trying to achieve.

it would be good to store user logins with cookies or similar.

adding honeysql for now. The idea of building up a sql query
dynamically using pipes is enticing.
- update honeysql added.

next step: let's add more functionality. I think now is a good time to
explore a minimal domain model and do some db modeling with yip

This works!

I think its a good time to start thinking of a good domain and data
model.

Here is a vision for the app:
This app will be a way to track the users progress towards mastery in
a skill or a group of skills. Think the 10,000 hour to mastery idea.

The user should be able to log in to their own area. In that area
there should be a way to perform crud operations on high level goals.
For each goal, it should be easy to add some time progress toward that
goal. The user should have reminders when logging as to what
deliberate practice is. In the future we would like to make it so that
multiple users can work together on shared goals, and a user can share
results from a goal to anyone they want to specify.

As a user progresses on their goal and updates, they should be able to
log time they spent on the goal, notes from that session, and
eventually things like images.

Can you build me a simple domain model and data model to go with it?
Please focus on high level before we implement code


* <2024-12-24 Tue>

- add formatting / linting [done]

maybe start building a proper domain model
- write up initial thoughts
- clarify and expand them

- use a database migration tool
- maybe look into honeysql and malli?
  - honeysql seems like a good idea
  - malli might be a bit early for now, let's see what the domain
    model looks like first

    maybe add a nice scheduling system in it for reminders and
    whatnot. A cool little use case would be to also make a
    plant-daddy app that takes care of various plant needs.

    update <2025-01-07 Tue>: Kelsey already has an app that looks great for this.

* <2024-12-23 Mon>

Next steps:
- stop making a new database every time. It would be better to use a
  proper db migration tool

- Maybe use something for managing SQL?

- Make a users table that stores information about a user and have it
  join to notes

- add user spaces where a user can make projects which have notes

- maybe try using postgres or something instead of H2?

- figure out some neat things that can be done in htmx that aren't as
  simple in react

- maybe simple auth? So the user can't see / access other notes and whatnot

* <2024-12-22 Sun>
Next steps:

- get a proper backend model working
  - maybe to start we can just store a bunch in a row

- set up a small local database
- enable edits in small chunks using HTMX
  - since we have this feature, we can maybe make a very dynamic built
    up collage of sorts for a layout

- Add real-time collaboration with web-sockets

- add session handling and user management

- handle conflicts for simultaneous updates

- add a proper database. Maybe use more docker compose

- add more advanced text editing

- add user A updated at notification
